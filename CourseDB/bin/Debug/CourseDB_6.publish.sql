/*
Deployment script for CourseDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "CourseDB"
:setvar DefaultFilePrefix "CourseDB"
:setvar DefaultDataPath "C:\Users\dell\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\dell\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping [dbo].[FK_dvd_cast]...';


GO
ALTER TABLE [dbo].[DVD_Detail] DROP CONSTRAINT [FK_dvd_cast];


GO
PRINT N'Dropping [dbo].[FK_dvd_studio]...';


GO
ALTER TABLE [dbo].[DVD_Detail] DROP CONSTRAINT [FK_dvd_studio];


GO
PRINT N'Dropping [dbo].[FK_dvd_producer]...';


GO
ALTER TABLE [dbo].[DVD_Detail] DROP CONSTRAINT [FK_dvd_producer];


GO
PRINT N'Dropping [dbo].[FK_loan_dvd]...';


GO
ALTER TABLE [dbo].[Loan] DROP CONSTRAINT [FK_loan_dvd];


GO
PRINT N'Dropping [dbo].[FK_loan_member]...';


GO
ALTER TABLE [dbo].[Loan] DROP CONSTRAINT [FK_loan_member];


GO
PRINT N'Dropping [dbo].[FK_member]...';


GO
ALTER TABLE [dbo].[Member] DROP CONSTRAINT [FK_member];


GO
PRINT N'Starting rebuilding table [dbo].[Cast_Details]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Cast_Details] (
    [Cast_ID]    INT            IDENTITY (1, 1) NOT NULL,
    [FirstName]  NVARCHAR (100) NOT NULL,
    [LastName]   NVARCHAR (100) NOT NULL,
    [Movie_Role] NVARCHAR (100) NOT NULL,
    PRIMARY KEY CLUSTERED ([Cast_ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Cast_Details])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Cast_Details] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Cast_Details] ([Cast_ID], [FirstName], [LastName], [Movie_Role])
        SELECT   [Cast_ID],
                 [FirstName],
                 [LastName],
                 [Movie_Role]
        FROM     [dbo].[Cast_Details]
        ORDER BY [Cast_ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Cast_Details] OFF;
    END

DROP TABLE [dbo].[Cast_Details];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Cast_Details]', N'Cast_Details';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[DVD_Detail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_DVD_Detail] (
    [Dvd_ID]      INT            IDENTITY (1, 1) NOT NULL,
    [Title]       NVARCHAR (100) NOT NULL,
    [Genres]      NVARCHAR (100) NOT NULL,
    [Stock]       INT            NOT NULL,
    [date_added]  DATE           NOT NULL,
    [Cast_ID]     INT            NOT NULL,
    [Studio_ID]   INT            NOT NULL,
    [Producer_ID] INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Dvd_ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[DVD_Detail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_DVD_Detail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_DVD_Detail] ([Dvd_ID], [Title], [Genres], [Stock], [date_added], [Cast_ID], [Studio_ID], [Producer_ID])
        SELECT   [Dvd_ID],
                 [Title],
                 [Genres],
                 [Stock],
                 [date_added],
                 [Cast_ID],
                 [Studio_ID],
                 [Producer_ID]
        FROM     [dbo].[DVD_Detail]
        ORDER BY [Dvd_ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_DVD_Detail] OFF;
    END

DROP TABLE [dbo].[DVD_Detail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_DVD_Detail]', N'DVD_Detail';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Loan]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Loan] (
    [Loan_ID]        INT  IDENTITY (1, 1) NOT NULL,
    [Date_out]       DATE NOT NULL,
    [Amount_paid]    INT  NOT NULL,
    [Due]            INT  NOT NULL,
    [Date_returned]  DATE NOT NULL,
    [Penalty_Charge] INT  NOT NULL,
    [Dvd_ID]         INT  NOT NULL,
    [Member_ID]      INT  NOT NULL,
    PRIMARY KEY CLUSTERED ([Loan_ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Loan])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Loan] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Loan] ([Loan_ID], [Date_out], [Amount_paid], [Due], [Date_returned], [Penalty_Charge], [Dvd_ID], [Member_ID])
        SELECT   [Loan_ID],
                 [Date_out],
                 [Amount_paid],
                 [Due],
                 [Date_returned],
                 [Penalty_Charge],
                 [Dvd_ID],
                 [Member_ID]
        FROM     [dbo].[Loan]
        ORDER BY [Loan_ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Loan] OFF;
    END

DROP TABLE [dbo].[Loan];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Loan]', N'Loan';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Member]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Member] (
    [Member_ID] INT            IDENTITY (1, 1) NOT NULL,
    [FirstName] NVARCHAR (100) NOT NULL,
    [LastName]  NVARCHAR (10)  NOT NULL,
    [Phone]     INT            NOT NULL,
    [User_ID]   INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Member_ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Member])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Member] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Member] ([Member_ID], [FirstName], [LastName], [Phone], [User_ID])
        SELECT   [Member_ID],
                 [FirstName],
                 [LastName],
                 [Phone],
                 [User_ID]
        FROM     [dbo].[Member]
        ORDER BY [Member_ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Member] OFF;
    END

DROP TABLE [dbo].[Member];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Member]', N'Member';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Producer_Details]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Producer_Details] (
    [Producer_ID]     INT            IDENTITY (1, 1) NOT NULL,
    [Producer_name]   NVARCHAR (100) NOT NULL,
    [Num_of_movie_by] INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Producer_ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Producer_Details])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Producer_Details] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Producer_Details] ([Producer_ID], [Producer_name], [Num_of_movie_by])
        SELECT   [Producer_ID],
                 [Producer_name],
                 [Num_of_movie_by]
        FROM     [dbo].[Producer_Details]
        ORDER BY [Producer_ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Producer_Details] OFF;
    END

DROP TABLE [dbo].[Producer_Details];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Producer_Details]', N'Producer_Details';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Studio_Details]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Studio_Details] (
    [Studio_ID]           INT            IDENTITY (1, 1) NOT NULL,
    [Studio_Name]         NVARCHAR (100) NOT NULL,
    [Number_of_movies_by] INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Studio_ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Studio_Details])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Studio_Details] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Studio_Details] ([Studio_ID], [Studio_Name], [Number_of_movies_by])
        SELECT   [Studio_ID],
                 [Studio_Name],
                 [Number_of_movies_by]
        FROM     [dbo].[Studio_Details]
        ORDER BY [Studio_ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Studio_Details] OFF;
    END

DROP TABLE [dbo].[Studio_Details];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Studio_Details]', N'Studio_Details';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FK_dvd_cast]...';


GO
ALTER TABLE [dbo].[DVD_Detail] WITH NOCHECK
    ADD CONSTRAINT [FK_dvd_cast] FOREIGN KEY ([Cast_ID]) REFERENCES [dbo].[Cast_Details] ([Cast_ID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_dvd_studio]...';


GO
ALTER TABLE [dbo].[DVD_Detail] WITH NOCHECK
    ADD CONSTRAINT [FK_dvd_studio] FOREIGN KEY ([Studio_ID]) REFERENCES [dbo].[Studio_Details] ([Studio_ID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_dvd_producer]...';


GO
ALTER TABLE [dbo].[DVD_Detail] WITH NOCHECK
    ADD CONSTRAINT [FK_dvd_producer] FOREIGN KEY ([Producer_ID]) REFERENCES [dbo].[Producer_Details] ([Producer_ID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_loan_dvd]...';


GO
ALTER TABLE [dbo].[Loan] WITH NOCHECK
    ADD CONSTRAINT [FK_loan_dvd] FOREIGN KEY ([Dvd_ID]) REFERENCES [dbo].[DVD_Detail] ([Dvd_ID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Creating [dbo].[FK_loan_member]...';


GO
ALTER TABLE [dbo].[Loan] WITH NOCHECK
    ADD CONSTRAINT [FK_loan_member] FOREIGN KEY ([Member_ID]) REFERENCES [dbo].[Member] ([Member_ID]);


GO
PRINT N'Creating [dbo].[FK_member]...';


GO
ALTER TABLE [dbo].[Member] WITH NOCHECK
    ADD CONSTRAINT [FK_member] FOREIGN KEY ([User_ID]) REFERENCES [dbo].[Users] ([User_ID]) ON DELETE CASCADE ON UPDATE CASCADE;


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[DVD_Detail] WITH CHECK CHECK CONSTRAINT [FK_dvd_cast];

ALTER TABLE [dbo].[DVD_Detail] WITH CHECK CHECK CONSTRAINT [FK_dvd_studio];

ALTER TABLE [dbo].[DVD_Detail] WITH CHECK CHECK CONSTRAINT [FK_dvd_producer];

ALTER TABLE [dbo].[Loan] WITH CHECK CHECK CONSTRAINT [FK_loan_dvd];

ALTER TABLE [dbo].[Loan] WITH CHECK CHECK CONSTRAINT [FK_loan_member];

ALTER TABLE [dbo].[Member] WITH CHECK CHECK CONSTRAINT [FK_member];


GO
PRINT N'Update complete.';


GO
